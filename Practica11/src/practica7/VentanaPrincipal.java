/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica7;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import sm.image.BlendOp;
import sm.image.KernelProducer;
import sm.image.LookupTableProducer;
import sm.image.SubtractionOp;

/**
 *
 * @author Miguel
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() {
        initComponents();
        this.setSize(1900,1000);

    }
    
    private final static int PUNTO = 1;
    private final static int LINEA = 2;
    private final static int RECTANGULO = 3;
    private final static int OVALO = 4;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        GroupHerramientas = new javax.swing.ButtonGroup();
        Panel = new javax.swing.JPanel();
        BarraAtributos = new javax.swing.JPanel();
        ButtonNuevo = new javax.swing.JToggleButton();
        ButtonAbrir = new javax.swing.JToggleButton();
        ButtonGuardar = new javax.swing.JToggleButton();
        jSeparator1 = new javax.swing.JSeparator();
        Herramientas = new javax.swing.JPanel();
        ButtonPunto = new javax.swing.JToggleButton();
        ButtonLinea = new javax.swing.JToggleButton();
        ButtonRectangulo = new javax.swing.JToggleButton();
        ButtonElipse = new javax.swing.JToggleButton();
        ButtonSeleccion = new javax.swing.JToggleButton();
        jSeparator2 = new javax.swing.JSeparator();
        Paleta = new javax.swing.JPanel();
        ComboColores = new javax.swing.JComboBox<>();
        SpinnerGrosor = new javax.swing.JSpinner();
        ButtonTransparencia = new javax.swing.JToggleButton();
        ButtonRelleno = new javax.swing.JToggleButton();
        ButtonAlisar = new javax.swing.JToggleButton();
        EscritorioDibujo = new javax.swing.JDesktopPane();
        PanelFiltro = new javax.swing.JPanel();
        MensajeEstado = new javax.swing.JTextField();
        PanelInferior = new javax.swing.JPanel();
        Brillo = new javax.swing.JPanel();
        SliderBrillo = new javax.swing.JSlider();
        Filtro = new javax.swing.JPanel();
        ComboBoxFlitro = new javax.swing.JComboBox<>();
        Contraste = new javax.swing.JPanel();
        ButtonContraste = new javax.swing.JButton();
        ButtonRotarIluminar = new javax.swing.JButton();
        ButtonRotarOscurecer = new javax.swing.JButton();
        Panel1 = new javax.swing.JPanel();
        Buttonsinusoidal = new javax.swing.JButton();
        ButtonSepia = new javax.swing.JButton();
        ButtonGradiente = new javax.swing.JButton();
        PanelRotacion = new javax.swing.JPanel();
        SliderRotacion = new javax.swing.JSlider();
        ButtonRotar90 = new javax.swing.JButton();
        ButtonRotar180 = new javax.swing.JButton();
        Button270 = new javax.swing.JButton();
        Escala = new javax.swing.JPanel();
        ButtonAumentar = new javax.swing.JButton();
        ButtonDisminuir = new javax.swing.JButton();
        Binaria = new javax.swing.JPanel();
        ButtonMas = new javax.swing.JButton();
        ButtonMenos = new javax.swing.JButton();
        SliderBinaria = new javax.swing.JSlider();
        Umbralizacion = new javax.swing.JPanel();
        SliderUmbral = new javax.swing.JSlider();
        jMenuBar1 = new javax.swing.JMenuBar();
        BotonArchivo = new javax.swing.JMenu();
        BotonNuevo = new javax.swing.JMenuItem();
        BotonAbrir = new javax.swing.JMenuItem();
        BotonGuardar = new javax.swing.JMenuItem();
        BotonEdicion = new javax.swing.JMenu();
        CheckBoxBarraEstado = new javax.swing.JCheckBoxMenuItem();
        CheckBoxBarraFormas = new javax.swing.JCheckBoxMenuItem();
        CheckBoxMenuBarraAtributos = new javax.swing.JCheckBoxMenuItem();
        MenuImagen = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Panel.setLayout(new java.awt.BorderLayout());

        BarraAtributos.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        ButtonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        ButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonNuevoActionPerformed(evt);
            }
        });
        BarraAtributos.add(ButtonNuevo);

        ButtonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        ButtonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAbrirActionPerformed(evt);
            }
        });
        BarraAtributos.add(ButtonAbrir);

        ButtonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        ButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarActionPerformed(evt);
            }
        });
        BarraAtributos.add(ButtonGuardar);
        BarraAtributos.add(jSeparator1);

        GroupHerramientas.add(ButtonPunto);
        ButtonPunto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/punto.png"))); // NOI18N
        ButtonPunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonPuntoActionPerformed(evt);
            }
        });
        Herramientas.add(ButtonPunto);

        GroupHerramientas.add(ButtonLinea);
        ButtonLinea.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/linea.png"))); // NOI18N
        ButtonLinea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLineaActionPerformed(evt);
            }
        });
        Herramientas.add(ButtonLinea);

        GroupHerramientas.add(ButtonRectangulo);
        ButtonRectangulo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rectangulo.png"))); // NOI18N
        ButtonRectangulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRectanguloActionPerformed(evt);
            }
        });
        Herramientas.add(ButtonRectangulo);

        GroupHerramientas.add(ButtonElipse);
        ButtonElipse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/elipse.png"))); // NOI18N
        ButtonElipse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonElipseActionPerformed(evt);
            }
        });
        Herramientas.add(ButtonElipse);

        GroupHerramientas.add(ButtonSeleccion);
        ButtonSeleccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/seleccion.png"))); // NOI18N
        ButtonSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSeleccionActionPerformed(evt);
            }
        });
        Herramientas.add(ButtonSeleccion);

        BarraAtributos.add(Herramientas);
        BarraAtributos.add(jSeparator2);

        ComboColores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        Paleta.add(ComboColores);

        SpinnerGrosor.setModel(new javax.swing.SpinnerNumberModel(1.0f, null, null, 1.0f));
        SpinnerGrosor.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SpinnerGrosorStateChanged(evt);
            }
        });
        SpinnerGrosor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                SpinnerGrosorPropertyChange(evt);
            }
        });
        Paleta.add(SpinnerGrosor);

        ButtonTransparencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/transparencia.png"))); // NOI18N
        ButtonTransparencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonTransparenciaActionPerformed(evt);
            }
        });
        Paleta.add(ButtonTransparencia);

        ButtonRelleno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rellenar.png"))); // NOI18N
        ButtonRelleno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRellenoActionPerformed(evt);
            }
        });
        Paleta.add(ButtonRelleno);

        ButtonAlisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/alisar.png"))); // NOI18N
        ButtonAlisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAlisarActionPerformed(evt);
            }
        });
        Paleta.add(ButtonAlisar);

        BarraAtributos.add(Paleta);

        Panel.add(BarraAtributos, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout EscritorioDibujoLayout = new javax.swing.GroupLayout(EscritorioDibujo);
        EscritorioDibujo.setLayout(EscritorioDibujoLayout);
        EscritorioDibujoLayout.setHorizontalGroup(
            EscritorioDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1375, Short.MAX_VALUE)
        );
        EscritorioDibujoLayout.setVerticalGroup(
            EscritorioDibujoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
        );

        Panel.add(EscritorioDibujo, java.awt.BorderLayout.CENTER);

        PanelFiltro.setLayout(new java.awt.BorderLayout());

        MensajeEstado.setText("Mensaje");
        MensajeEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MensajeEstadoActionPerformed(evt);
            }
        });
        PanelFiltro.add(MensajeEstado, java.awt.BorderLayout.PAGE_END);

        PanelInferior.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        Brillo.setBorder(javax.swing.BorderFactory.createTitledBorder("Brillo"));

        SliderBrillo.setMaximum(255);
        SliderBrillo.setMinimum(-255);
        SliderBrillo.setToolTipText("");
        SliderBrillo.setValue(0);
        SliderBrillo.setPreferredSize(new java.awt.Dimension(250, 26));
        SliderBrillo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderBrilloStateChanged(evt);
            }
        });
        Brillo.add(SliderBrillo);

        PanelInferior.add(Brillo);

        Filtro.setBorder(javax.swing.BorderFactory.createTitledBorder("Filtro"));

        ComboBoxFlitro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Media", "Binomial", "Enfoque", "Relieve", "Laplaciano" }));
        ComboBoxFlitro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxFlitroActionPerformed(evt);
            }
        });
        Filtro.add(ComboBoxFlitro);

        PanelInferior.add(Filtro);

        Contraste.setBorder(javax.swing.BorderFactory.createTitledBorder("Contraste"));
        Contraste.setPreferredSize(new java.awt.Dimension(200, 80));

        ButtonContraste.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/contraste.png"))); // NOI18N
        ButtonContraste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonContrasteActionPerformed(evt);
            }
        });
        Contraste.add(ButtonContraste);

        ButtonRotarIluminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/iluminar.png"))); // NOI18N
        ButtonRotarIluminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRotarIluminarActionPerformed(evt);
            }
        });
        Contraste.add(ButtonRotarIluminar);

        ButtonRotarOscurecer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/oscurecer.png"))); // NOI18N
        ButtonRotarOscurecer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRotarOscurecerActionPerformed(evt);
            }
        });
        Contraste.add(ButtonRotarOscurecer);

        PanelInferior.add(Contraste);

        Panel1.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));
        Panel1.setPreferredSize(new java.awt.Dimension(200, 80));

        Buttonsinusoidal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sinusoidal.png"))); // NOI18N
        Buttonsinusoidal.setPreferredSize(new java.awt.Dimension(49, 25));
        Buttonsinusoidal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonsinusoidalActionPerformed(evt);
            }
        });
        Panel1.add(Buttonsinusoidal);

        ButtonSepia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/sepia.png"))); // NOI18N
        ButtonSepia.setPreferredSize(new java.awt.Dimension(49, 25));
        ButtonSepia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSepiaActionPerformed(evt);
            }
        });
        Panel1.add(ButtonSepia);

        ButtonGradiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/gradiente.png"))); // NOI18N
        ButtonGradiente.setPreferredSize(new java.awt.Dimension(49, 25));
        Panel1.add(ButtonGradiente);

        PanelInferior.add(Panel1);

        PanelRotacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Rotacion"));

        SliderRotacion.setMaximum(360);
        SliderRotacion.setMinorTickSpacing(90);
        SliderRotacion.setPaintTicks(true);
        SliderRotacion.setSnapToTicks(true);
        SliderRotacion.setValue(0);
        SliderRotacion.setPreferredSize(new java.awt.Dimension(100, 26));
        SliderRotacion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                SliderRotacionStateChanged(evt);
            }
        });
        PanelRotacion.add(SliderRotacion);

        ButtonRotar90.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion90.png"))); // NOI18N
        ButtonRotar90.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRotar90ActionPerformed(evt);
            }
        });
        PanelRotacion.add(ButtonRotar90);

        ButtonRotar180.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion180.png"))); // NOI18N
        ButtonRotar180.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonRotar180ActionPerformed(evt);
            }
        });
        PanelRotacion.add(ButtonRotar180);

        Button270.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/rotacion270.png"))); // NOI18N
        Button270.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button270ActionPerformed(evt);
            }
        });
        PanelRotacion.add(Button270);

        PanelInferior.add(PanelRotacion);

        Escala.setBorder(javax.swing.BorderFactory.createTitledBorder("Escala"));

        ButtonAumentar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/aumentar.png"))); // NOI18N
        ButtonAumentar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAumentarActionPerformed(evt);
            }
        });
        Escala.add(ButtonAumentar);

        ButtonDisminuir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/disminuir.png"))); // NOI18N
        ButtonDisminuir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonDisminuirActionPerformed(evt);
            }
        });
        Escala.add(ButtonDisminuir);

        PanelInferior.add(Escala);

        Binaria.setBorder(javax.swing.BorderFactory.createTitledBorder("Binaria"));

        ButtonMas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/suma.png"))); // NOI18N
        ButtonMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMasActionPerformed(evt);
            }
        });
        Binaria.add(ButtonMas);

        ButtonMenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/resta.png"))); // NOI18N
        ButtonMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMenosActionPerformed(evt);
            }
        });
        Binaria.add(ButtonMenos);

        SliderBinaria.setValue(0);
        SliderBinaria.setPreferredSize(new java.awt.Dimension(100, 26));
        Binaria.add(SliderBinaria);

        PanelInferior.add(Binaria);

        Umbralizacion.setBorder(javax.swing.BorderFactory.createTitledBorder("Umbralizacion"));
        Umbralizacion.add(SliderUmbral);

        PanelInferior.add(Umbralizacion);

        PanelFiltro.add(PanelInferior, java.awt.BorderLayout.CENTER);

        Panel.add(PanelFiltro, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(Panel, java.awt.BorderLayout.CENTER);

        BotonArchivo.setText("Archivo");

        BotonNuevo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK));
        BotonNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/nuevo.png"))); // NOI18N
        BotonNuevo.setText("Nuevo");
        BotonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonNuevoActionPerformed(evt);
            }
        });
        BotonArchivo.add(BotonNuevo);

        BotonAbrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        BotonAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/abrir.png"))); // NOI18N
        BotonAbrir.setText("Abrir");
        BotonAbrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonAbrirActionPerformed(evt);
            }
        });
        BotonArchivo.add(BotonAbrir);

        BotonGuardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_MASK));
        BotonGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/guardar.png"))); // NOI18N
        BotonGuardar.setText("Guardar");
        BotonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonGuardarActionPerformed(evt);
            }
        });
        BotonArchivo.add(BotonGuardar);

        jMenuBar1.add(BotonArchivo);

        BotonEdicion.setText("Edicion");

        CheckBoxBarraEstado.setSelected(true);
        CheckBoxBarraEstado.setText("Ver barra de estado");
        CheckBoxBarraEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxBarraEstadoActionPerformed(evt);
            }
        });
        BotonEdicion.add(CheckBoxBarraEstado);

        CheckBoxBarraFormas.setSelected(true);
        CheckBoxBarraFormas.setText("Ver barra de formas");
        CheckBoxBarraFormas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxBarraFormasActionPerformed(evt);
            }
        });
        BotonEdicion.add(CheckBoxBarraFormas);

        CheckBoxMenuBarraAtributos.setSelected(true);
        CheckBoxMenuBarraAtributos.setText("Ver barra de atributos");
        CheckBoxMenuBarraAtributos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBoxMenuBarraAtributosActionPerformed(evt);
            }
        });
        BotonEdicion.add(CheckBoxMenuBarraAtributos);

        jMenuBar1.add(BotonEdicion);

        MenuImagen.setText("Imagen");
        jMenuBar1.add(MenuImagen);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                vi.getLienzo().setImage(img);
                vi.getLienzo().setImageFondo(img);
                this.EscritorioDibujo.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            //Código
            }
        }
    }//GEN-LAST:event_BotonAbrirActionPerformed

    private void CheckBoxBarraEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxBarraEstadoActionPerformed
        // TODO add your handling code here:
         this.MensajeEstado.setVisible(this.CheckBoxBarraEstado.isSelected());
    }//GEN-LAST:event_CheckBoxBarraEstadoActionPerformed

    private void CheckBoxBarraFormasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxBarraFormasActionPerformed
        // TODO add your handling code here:
        this.Herramientas.setVisible(this.CheckBoxBarraFormas.isSelected());
    }//GEN-LAST:event_CheckBoxBarraFormasActionPerformed

    private void BotonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonNuevoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = new VentanaInterna(this);
        EscritorioDibujo.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        Graphics g = img.getGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, 300, 300);
        vi.getLienzo().setImage(img);
        vi.getLienzo().setImageFondo(img);
    }//GEN-LAST:event_BotonNuevoActionPerformed

    private void BotonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonGuardarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna) EscritorioDibujo.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImage(true);
                if (img != null) {
                    File f = dlg.getSelectedFile();
                    ImageIO.write(img, "jpg", f);
                    vi.setTitle(f.getName());
                }
            }catch (Exception ex) {
                System.err.println("Error al guardar la imagen");
        }
        }
        }
    }//GEN-LAST:event_BotonGuardarActionPerformed

    private void CheckBoxMenuBarraAtributosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBoxMenuBarraAtributosActionPerformed
        // TODO add your handling code here:
        this.Paleta.setVisible(this.CheckBoxMenuBarraAtributos.isSelected());
    }//GEN-LAST:event_CheckBoxMenuBarraAtributosActionPerformed

    private void ButtonAbrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAbrirActionPerformed
        // TODO add your handling code here:
        JFileChooser dlg = new JFileChooser();
        int resp = dlg.showOpenDialog(this);
        if( resp == JFileChooser.APPROVE_OPTION) {
            try{
                File f = dlg.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                VentanaInterna vi = new VentanaInterna(this);
                vi.getLienzo().setImage(img);
                vi.getLienzo().setImageFondo(img);
                this.EscritorioDibujo.add(vi);
                vi.setTitle(f.getName());
                vi.setVisible(true);
            
            }catch(Exception ex){
                System.err.println("Error al leer la imagen");
            //Código
            }
        }
    }//GEN-LAST:event_ButtonAbrirActionPerformed

    private void MensajeEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MensajeEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MensajeEstadoActionPerformed

    private void ButtonLineaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLineaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setHerramienta(LINEA);
        this.MensajeEstado.setText("Linea");
        }
    }//GEN-LAST:event_ButtonLineaActionPerformed

    private void ButtonPuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonPuntoActionPerformed
        // TODO add your handling code here:
         // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setHerramienta(PUNTO);
        this.MensajeEstado.setText("Punto");
        }
    }//GEN-LAST:event_ButtonPuntoActionPerformed

    private void ButtonRectanguloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRectanguloActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setHerramienta(RECTANGULO);
        this.MensajeEstado.setText("Rectangulo");
        }
    }//GEN-LAST:event_ButtonRectanguloActionPerformed

    private void ButtonElipseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonElipseActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setHerramienta(OVALO);
        this.MensajeEstado.setText("Ovalo");
        }
    }//GEN-LAST:event_ButtonElipseActionPerformed

    private void ButtonRellenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRellenoActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setRelleno(this.ButtonRelleno.isSelected());
        vinterna.getLienzo().repaint();        
        this.MensajeEstado.setText(" Relleno");
        }
    }//GEN-LAST:event_ButtonRellenoActionPerformed

    private void ButtonTransparenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonTransparenciaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setTransparencia(this.ButtonTransparencia.isSelected());
        vinterna.getLienzo().repaint();        
        this.MensajeEstado.setText(" Transparencia");
        }
    }//GEN-LAST:event_ButtonTransparenciaActionPerformed

    private void ButtonAlisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAlisarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setAlisar(this.ButtonTransparencia.isSelected());
        vinterna.getLienzo().repaint();        
        this.MensajeEstado.setText(" Alisar");
        }
    }//GEN-LAST:event_ButtonAlisarActionPerformed

    private void ButtonSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSeleccionActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna ;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
        vinterna.getLienzo().setMover(this.ButtonSeleccion.isSelected());
        vinterna.getLienzo().repaint();        
        this.MensajeEstado.setText(" Editar");
        }
    }//GEN-LAST:event_ButtonSeleccionActionPerformed

    private void ButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonNuevoActionPerformed

        VentanaInterna vi = new VentanaInterna(this);
        EscritorioDibujo.add(vi);
        vi.setVisible(true);
        BufferedImage img;
        img = new BufferedImage(300,300,BufferedImage.TYPE_INT_RGB);
        Graphics g = img.getGraphics();
        g.setColor(Color.white);
        g.fillRect(0, 0, 300, 300);
        vi.getLienzo().setImage(img);
        vi.getLienzo().setImageFondo(img);
    }//GEN-LAST:event_ButtonNuevoActionPerformed

    private void ButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi=(VentanaInterna) EscritorioDibujo.getSelectedFrame();
        if (vi != null) {
            JFileChooser dlg = new JFileChooser();
            int resp = dlg.showSaveDialog(this);
            if (resp == JFileChooser.APPROVE_OPTION) {
                try {
                BufferedImage img = vi.getLienzo().getImage(true);
                if (img != null) {
                    File f = dlg.getSelectedFile();
                    ImageIO.write(img, "jpg", f);
                    vi.setTitle(f.getName());
                }
            }catch (Exception ex) {
                System.err.println(" Error al guardar la imagen");
            }
            }
        }
    }//GEN-LAST:event_ButtonGuardarActionPerformed

    private void SpinnerGrosorPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_SpinnerGrosorPropertyChange
        // TODO add your handling code here:
       
    }//GEN-LAST:event_SpinnerGrosorPropertyChange

    private void SpinnerGrosorStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SpinnerGrosorStateChanged
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().setGrosor((float) this.SpinnerGrosor.getValue());//Pongo el grosor con el valor del spinner
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Grosor = " + this.SpinnerGrosor.getValue() );
        }
    }//GEN-LAST:event_SpinnerGrosorStateChanged

    private void SliderBrilloStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderBrilloStateChanged
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().brillo(this.SliderBrillo.getValue());//LLamo a la función brillo con el valor del slider
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Brillo = " + this.SliderBrillo.getValue() );
        }
        
    }//GEN-LAST:event_SliderBrilloStateChanged

    private void ComboBoxFlitroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxFlitroActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            switch (this.ComboBoxFlitro.getSelectedIndex()){//Vemos que filtro está seleccionado, devuelve un int
                case 0 ://Media
                    vinterna.getLienzo().Filtro(KernelProducer.TYPE_MEDIA_3x3);  
                    this.MensajeEstado.setText(" Filtro = Media"  );
                break;
                case 1://Binomial
                    vinterna.getLienzo().Filtro(KernelProducer.TYPE_BINOMIAL_3x3);                  
                    this.MensajeEstado.setText(" Filtro = Binomial"  );
                break;
                case 2 :
                    vinterna.getLienzo().Filtro(KernelProducer.TYPE_ENFOQUE_3x3);                   
                    this.MensajeEstado.setText(" Filtro = Enfoque"  );
                break;
                case 3 :
                    vinterna.getLienzo().Filtro(KernelProducer.TYPE_RELIEVE_3x3);                  
                    this.MensajeEstado.setText(" Filtro = Relieve"  );
                break;
                case 4 :
                    vinterna.getLienzo().Filtro(KernelProducer.TYPE_LAPLACIANA_3x3);          
                    this.MensajeEstado.setText(" Filtro = Laplaciana"  );
                break;
                
        }             
            vinterna.getLienzo().repaint();

        }
        
    }//GEN-LAST:event_ComboBoxFlitroActionPerformed

    private void ButtonContrasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonContrasteActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().Contraste(LookupTableProducer.TYPE_SFUNCION);
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Contraste Normal " );
        }
        
    }//GEN-LAST:event_ButtonContrasteActionPerformed

    private void ButtonRotarIluminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRotarIluminarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().Contraste(LookupTableProducer.TYPE_GAMMA_CORRECTION);
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText("Contraste Iluminacion " );
        }
    }//GEN-LAST:event_ButtonRotarIluminarActionPerformed

    private void ButtonsinusoidalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonsinusoidalActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().vSeno();//Llamo a la funcion void que aplica el seno
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Seno " );
        }
        
    }//GEN-LAST:event_ButtonsinusoidalActionPerformed

    private void SliderRotacionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_SliderRotacionStateChanged
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().rotar(this.SliderRotacion.getValue(),false);//Pasamos false porque en todo momento pasamos el valor del slider sobre el original"sin rotar"
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Giro = " + this.SliderRotacion.getValue() );
        }
        
    }//GEN-LAST:event_SliderRotacionStateChanged

    private void ButtonRotar90ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRotar90ActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().rotar(90,true);//Como es boton pasamos true para que podamos pulsar varias veces
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Giro = 90"  );
        }
    }//GEN-LAST:event_ButtonRotar90ActionPerformed

    private void ButtonRotar180ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRotar180ActionPerformed
        // TODO add your handling code here:
         VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().rotar(180,true);//Como es boton pasamos true para que podamos pulsar varias veces
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Giro = 180"  );
        }
    }//GEN-LAST:event_ButtonRotar180ActionPerformed

    private void Button270ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button270ActionPerformed
        // TODO add your handling code here:
         VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){
            vinterna.getLienzo().rotar(270,true);//Como es boton pasamos true para que podamos pulsar varias veces
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Giro = 270"  );
        }
    }//GEN-LAST:event_Button270ActionPerformed

    private void ButtonRotarOscurecerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonRotarOscurecerActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().Contraste(LookupTableProducer.TYPE_POWER);
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText("Contraste Oscurecer " );
        }
        
    }//GEN-LAST:event_ButtonRotarOscurecerActionPerformed

    private void ButtonSepiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSepiaActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().sepia();
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Sepia " );
        }
    }//GEN-LAST:event_ButtonSepiaActionPerformed

    private void ButtonAumentarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAumentarActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().Escalado(1.05f);
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Aumentar " );
        }
    }//GEN-LAST:event_ButtonAumentarActionPerformed

    private void ButtonDisminuirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonDisminuirActionPerformed
        // TODO add your handling code here:
        VentanaInterna vinterna;
        vinterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vinterna != null){        
            vinterna.getLienzo().Escalado(0.95f);
            vinterna.getLienzo().repaint();
            this.MensajeEstado.setText(" Disminuir " );
        }
    }//GEN-LAST:event_ButtonDisminuirActionPerformed

    private void ButtonMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMasActionPerformed
        // TODO add your handling code here:
        VentanaInterna vi = (VentanaInterna) (EscritorioDibujo.getSelectedFrame());
        if (vi != null) {
            VentanaInterna viNext = (VentanaInterna) EscritorioDibujo.selectFrame(false);
            if (viNext != null) {
                BufferedImage imgRight = vi.getLienzo().getImage(true);
                BufferedImage imgLeft = viNext.getLienzo().getImage(true);
                if (imgRight != null && imgLeft != null) {
                    try {
                        BlendOp op = new BlendOp(imgLeft);
                        BufferedImage imgdest = op.filter(imgRight, null);
                        vi = new VentanaInterna();
                        vi.getLienzo().setImage(imgdest);
                        this.EscritorioDibujo.add(vi);
                        vi.setVisible(true);
                    } catch (IllegalArgumentException e) {
                        System.err.println("Error sumar imagen");
                    }
                }
            }
        }

    }//GEN-LAST:event_ButtonMasActionPerformed

    private void ButtonMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMenosActionPerformed
        // TODO add your handling code here:
        
        VentanaInterna vi = (VentanaInterna) (EscritorioDibujo.getSelectedFrame());
        if (vi != null) {
            VentanaInterna viNext = (VentanaInterna) EscritorioDibujo.selectFrame(false);
            if (viNext != null) {
                BufferedImage imgRight = vi.getLienzo().getImage(true);
                BufferedImage imgLeft = viNext.getLienzo().getImage(true);
                if (imgRight != null && imgLeft != null) {
                    try {
                        SubtractionOp op= new SubtractionOp(imgLeft);
                        BufferedImage imgdest = op.filter(imgRight, null);
                        vi = new VentanaInterna();
                        vi.getLienzo().setImage(imgdest);
                        this.EscritorioDibujo.add(vi);
                        vi.setVisible(true);
                    } catch (IllegalArgumentException e) {
                        System.err.println("Error restar imagen");
                    }
                }
            }
        }
    }//GEN-LAST:event_ButtonMenosActionPerformed
    public void RecuperarDatos(){
        //Funcion para almacenar que tiene dentro cada ventana interna, para cuando cambiamos de ventana y volvemos
        //Para cuando cambio de ventana saber que tenias pulsado
        VentanaInterna vInterna;
        vInterna = (VentanaInterna)EscritorioDibujo.getSelectedFrame();
        if (vInterna != null){
       //Vemos que checkbox están activados
        this.ButtonRelleno.setSelected(vInterna.getLienzo().isRelleno());
        this.ButtonAlisar.setSelected(vInterna.getLienzo().isAlisar());
        this.ButtonSeleccion.setSelected(vInterna.getLienzo().isMover());
        this.ButtonTransparencia.setSelected(vInterna.getLienzo().isTransparencia());
        this.SpinnerGrosor.setValue(vInterna.getLienzo().getGrosor());
        //Comprobamos que herramientas está activa
        if (vInterna.getLienzo().getHerramienta()==PUNTO)
            this.ButtonPunto.setSelected(true);
        if (vInterna.getLienzo().getHerramienta()==LINEA)
            this.ButtonLinea.setSelected(true);
        if (vInterna.getLienzo().getHerramienta()==RECTANGULO)
            this.ButtonRectangulo.setSelected(true);
        if (vInterna.getLienzo().getHerramienta()==OVALO)
            this.ButtonElipse.setSelected(true);
        
        }
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BarraAtributos;
    private javax.swing.JPanel Binaria;
    private javax.swing.JMenuItem BotonAbrir;
    private javax.swing.JMenu BotonArchivo;
    private javax.swing.JMenu BotonEdicion;
    private javax.swing.JMenuItem BotonGuardar;
    private javax.swing.JMenuItem BotonNuevo;
    private javax.swing.JPanel Brillo;
    private javax.swing.JButton Button270;
    private javax.swing.JToggleButton ButtonAbrir;
    private javax.swing.JToggleButton ButtonAlisar;
    private javax.swing.JButton ButtonAumentar;
    private javax.swing.JButton ButtonContraste;
    private javax.swing.JButton ButtonDisminuir;
    private javax.swing.JToggleButton ButtonElipse;
    private javax.swing.JButton ButtonGradiente;
    private javax.swing.JToggleButton ButtonGuardar;
    private javax.swing.JToggleButton ButtonLinea;
    private javax.swing.JButton ButtonMas;
    private javax.swing.JButton ButtonMenos;
    private javax.swing.JToggleButton ButtonNuevo;
    private javax.swing.JToggleButton ButtonPunto;
    private javax.swing.JToggleButton ButtonRectangulo;
    private javax.swing.JToggleButton ButtonRelleno;
    private javax.swing.JButton ButtonRotar180;
    private javax.swing.JButton ButtonRotar90;
    private javax.swing.JButton ButtonRotarIluminar;
    private javax.swing.JButton ButtonRotarOscurecer;
    private javax.swing.JToggleButton ButtonSeleccion;
    private javax.swing.JButton ButtonSepia;
    private javax.swing.JToggleButton ButtonTransparencia;
    private javax.swing.JButton Buttonsinusoidal;
    private javax.swing.JCheckBoxMenuItem CheckBoxBarraEstado;
    private javax.swing.JCheckBoxMenuItem CheckBoxBarraFormas;
    private javax.swing.JCheckBoxMenuItem CheckBoxMenuBarraAtributos;
    private javax.swing.JComboBox<String> ComboBoxFlitro;
    private javax.swing.JComboBox<String> ComboColores;
    private javax.swing.JPanel Contraste;
    private javax.swing.JPanel Escala;
    private javax.swing.JDesktopPane EscritorioDibujo;
    private javax.swing.JPanel Filtro;
    private javax.swing.ButtonGroup GroupHerramientas;
    private javax.swing.JPanel Herramientas;
    private javax.swing.JTextField MensajeEstado;
    private javax.swing.JMenu MenuImagen;
    private javax.swing.JPanel Paleta;
    private javax.swing.JPanel Panel;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel PanelFiltro;
    private javax.swing.JPanel PanelInferior;
    private javax.swing.JPanel PanelRotacion;
    private javax.swing.JSlider SliderBinaria;
    private javax.swing.JSlider SliderBrillo;
    private javax.swing.JSlider SliderRotacion;
    private javax.swing.JSlider SliderUmbral;
    private javax.swing.JSpinner SpinnerGrosor;
    private javax.swing.JPanel Umbralizacion;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables
}
