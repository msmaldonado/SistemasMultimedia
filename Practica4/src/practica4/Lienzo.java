/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package practica4;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author Migue
 */
public class Lienzo extends javax.swing.JPanel {
    Point puntoInicial, puntoFinal;//Declaramos los dos puntos con los que dibujar
    private Color color ;//El color seleccionado
    boolean relleno ;//boolenano para saber si esta relleno
    String formaDibujo ;//Forma del dibujo
    /**
     * Creates new form Lienzo
     */
    public Lienzo() {//Constructor de lienzo
        this.puntoInicial = null;
        this.puntoFinal = null ;
        this.relleno = false;
        this.formaDibujo = "Punto";//iniciamos a color negro
        this.color = Color.black ;//iniciamos a negro
        initComponents();
    }
    
    /* MÃ©todos get y set para cambiar las variables de Lienzo*/
    public String getForma(){
        return formaDibujo;
    }
    
    public void setForma(String nuevaforma) {
        this.formaDibujo = nuevaforma;
    }
    
    public Color getColor() {
        return color;
    }

    public void setColor(Color nuevoColor) {
        this.color = nuevoColor;
    }

    public boolean isRelleno() {
        return relleno;
    }

    public void setRelleno(boolean nuevorelleno) {
        this.relleno = nuevorelleno;
    }
    /*Metodo limpiarVentana que pone a null los dos puntos*/
    public void LimpiarVentana(){
        this.puntoInicial = null;
        this.puntoFinal = null ;
    }
    @Override
    public void paint(Graphics g){
        super.paint (g);
        
        g.setColor(color);
        /*Vemos si los puntos estan a null  para no pintar nada*/
        if (puntoInicial == null && puntoFinal == null){
            this.repaint();  
        }
        else{      //Si los puntos tienen algun valor
            switch(formaDibujo){//Comprobamos que forma hay que dibujar y pintamos
                           
                case "Punto":               
                        g.fillOval(puntoInicial.x, puntoInicial.y, 6, 6);                   
                break;
                         
                case "Linea":                    
                        g.drawLine(puntoInicial.x,puntoInicial.y,puntoFinal.x, puntoFinal.y);                    
                break;
                      
                case "Rectangulo":                    
                        if(relleno)
                            g.fillRect( Math.min(puntoInicial.x, puntoFinal.x), Math.min(puntoInicial.y, puntoFinal.y), Math.abs( puntoFinal.x - puntoInicial.x), Math.abs(puntoFinal.y - puntoInicial.y ));
                        else 
                            g.drawRect( Math.min(puntoInicial.x, puntoFinal.x), Math.min(puntoInicial.y, puntoFinal.y), Math.abs( puntoFinal.x - puntoInicial.x), Math.abs(puntoFinal.y - puntoInicial.y ));
                    
                break;               
                
                case"Ovalo":                 
                                              
                        if (relleno)
                            g.fillOval(Math.min(puntoInicial.x, puntoFinal.x), Math.min(puntoInicial.y, puntoFinal.y), Math.abs( puntoFinal.x- puntoInicial.x ), Math.abs( puntoFinal.y- puntoInicial.y));
                        else 
                            g.drawOval(Math.min(puntoInicial.x, puntoFinal.x), Math.min(puntoInicial.y, puntoFinal.y), Math.abs( puntoFinal.x- puntoInicial.x ), Math.abs( puntoFinal.y- puntoInicial.y));
                    
                  break;                                              
            }   
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        puntoInicial=evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
         puntoFinal=evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
          puntoInicial=evt.getPoint();
        
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
         puntoFinal=evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseReleased
   
    /*
    private void formMouseClicked(java.awt.event.MouseEvent evt) {                                  
        // En nuestro caso, utilizamos mouseClicked para dibujar puntos
        
    }   */
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}